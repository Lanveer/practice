
一、基于angular服务的方式：
在angular中服务是一个单例，所以在服务中生成一个对象，该对象就可以利用依赖注入的方式在所有的控制器中共享。参照以下例子，在一个控制器修改了服务对象的值，
在另一个控制器中获取到修改后的值

代码如下：
var app = angular.module('myApp', []);

app.factory('Myservice', function(){
    return {};
});
      //定义服务

app.controller('Ctrltest1', function($scope, 'Myservice') {
  $scope.change = function() {
       Myservice.name = $scope.test;   //在第一个控制器中为服务对象赋值
  };
});


app.controller('Ctrltst2', function($scope, 'Myservice') {
    $scope.add = function() {
        $scope.name = Myservice.name;  //将第一个控制器中为服务对象赋的值传给第二个控制器
    };
});

<div ng-controller='Ctrltest1'>
     <input type="text" ng-model="test" />
     <div ng-click="change()">click me</div>
<
</div>
<div ng-controller='Ctrltest2'>
    <div ng-click="add()">my name {{name}}</div>
</div>

二、基于事件广播的方式
基于事件广播，需要用到$emit()、$broadcaset()和$emit()这三个方法。


1.向父作用域层次结构发出自定义事件：使用$emit()方法，scope.$emit(name,[args,...])
注：name是事件名，args 是0个或多个参数。
应用场景：用于子页面控制器向父页面的控制器传递参数。

2.向子作用域层次结构广播自定义事件：

应用场景：用于父页面控制器向子页面的控制器传递参数或者同级控制器之间传递参数。



使用$broadcaset()方法，$scope.$broadcaset(name,[args,...])
注：name是事件名，args 是0个或多个参数.
