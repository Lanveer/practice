

1. select下拉列表中，，angular使用了ng-options的方式，在选择一个下拉框的时候，我们需要传递一个id过去，这个时候可以使用ng-change='test(data)'

这里面的data就是ng-model绑定的对象，，在$scope函数里面接收的话，可以使用$scope.test= function(item){
console.log(item.id)
}

在这个方法里面，function中的item就是前面data里面的值，通过item.id就可以获取到正在所选中的ID了。




2.使用<pre>{{data }}</pre>这样的方式可以动态看到data所绑定的值的变化，，
eg：   ng-model="data.name"  /  ng-model="password=data" 通过这样的方式就可以根据输入获取到对应值的变化，可以在pre这个标签里面看到我们所
输入的结果。




3. ¥scope函数里面如果遇到多个条件的话，不需要使用层层的嵌套，可以使用angular的switch完成。


4. anghular 的ng-file-upload 实现文件上传



5.ng-model实现反相数据的更新，在restful接口开发中最实用。


6. angular解决post提交表单后台收不到数据，
  1）在请求中配置 headers:{'Content-Type': 'application/x-www-form-urlencoded'}, 
  2）post方式的话参数使用data  get使用params
  
  7.angular uirouter 的代理问题，方便不同的请求对应不同的端口
  
  解释：
  
  
  8.解决angular spa中加载的时候总是显示一个怪异页面的问题。
  
  解释：
  
  
 9. 解决angular 1.5 版本的成功回调函数不执行的问题
  解释：


10. angular实现文件上传
解释

11. angular实现图片上传

解释

12.angular的富文本编辑
解释


13. angular使用summernote富文本上传图片到服务器--使用上传插件是ng-file-upload
用法：一般情况下，使用富文本编辑图片的时候，图片都通过base64格式存放在本地的数据库里面，缺点很明显，一个是数据量打，一个是效率不高，还有就是支持
率不高，小程序的富文本渲染器就不支持base64的渲染，所以，我们再使用summernote的时候，就把图片全部上传到服务器上面

使用：  <summernote config="options" ng-model="AddDate.introduce" editor="editor" editable="editable" 
data-on-image-upload="imageUpload(files)"></summernote>

controller： 
A.首先在控制器的依赖模块里面注入需要的组件 Upload以及上传所需要的
B.定义上传图片执行方法函数：
   $scope.imageUpload = function(files) {
            uploadEditorImage(files);
        };
C.具体方法：
解释：oss是提前在模块里面定义的解析上传文件的方法，包括对文件后缀的处理，以及文件名的生成

  function uploadEditorImage(files) {
            var key = oss.key + oss.random_string(10) + oss.get_suffix(files[0].name);
            if (files != null) {
                Upload.upload({
                    url: 'http://jswpic.oss-cn-hangzhou.aliyuncs.com', //S3 upload url including bucket name
                    // file: files[0],
                    data: {
                        key: key, // the key to store the file on S3, could be file name or customized
                        OSSAccessKeyId: oss.OSSAccessKeyId,
                        acl: 'public-read', // sets the access to the uploaded file in the bucket: private, public-read, ...
                        policy: oss.policy, // base64-encoded json policy (see article below)
                        signature: oss.signature, // base64-encoded signature based on policy string (see article below)
                        "Content-Type": files.type != '' ? files.type : 'application/octet-stream', // content type of the file (NotEmpty)
                        filename: files[0].name, // this is needed for Flash polyfill IE8-9
                        success_action_status: 200,
                        file:files[0]
                    }
                }).success(function(data, status, headers, config) {
                    $scope.richImgs = 'http://pic.jiushang.cn/' + key;
                    console.log('jjj:'+$scope.richImgs)
                    // var editor = $.summernote.eventHandler.getModule(),
                        var file_location =$scope.richImgs;   //上传服务器的图片的url

                    // editor.insertImage($scope.editable, file_location, uploaded_file_name);

                    $scope.editor.summernote('editor.insertImage', file_location);//在编辑框中显示我们上传的文件

                });

            }

        };
        
        这里面需要注意的地方 // var editor = $.summernote.eventHandler.getModule()  如果使用这个的话，会报一个getModule() undefined的错误
        ，在网上搜索了很多都找不到解决办法，我们使用这个的目的就是在上传文件到服务器之后可以在编辑框里面展示我们不上传的图片。便于再次编辑，




14. 使用angular完成失去焦点的时候发送ajax请求
  <input type="text" class="tjh-input" placeholder="请输入产品关键词" value="" ng-model="AddDate.goods" ng-blur="test()">
  在controller里面定义
       $scope.test=function () {
            var keyword=$scope.AddDate.goods;
            var searchPromise= $http({
                url:'http://jswapi.jiushang.cn/public/local/goods',
                method:'get',
                type:'json',
                params:{keyword:$scope.AddDate.goods}
            });
            searchPromise.then(function (res) {
              console.log(res)
            })
        }
        













