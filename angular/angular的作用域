<div ng-controller="TestCtrl">
  <p>{{name}}</p>
  <div ng-if="show">
    <input type="text" ng-model="name">
  </div>
</div>
<script>
function TestCtrl($scope){
    $scope.show = true;
    $scope.name = 'htf';
}
</script>

这种情况下，input输入的值是不会改变到p标签中去的，原因就在于ng-if的使用创建了两个不同的作用域，两个作用域引用的值不一样，所以会出现这样的情况


作用域的概念
每个 Angular 应用默认有一个根作用域 $rootScope， 根作用域位于最顶层，从它往下挂着各级作用域。

通常情况下，页面中 ng-model 绑定的变量都是在对应的 Controller 中定义的。如果一个变量未在当前作用域中定义，JavaScript 会通过当前 Controller 的 
prototype 向上查找，也就是作用域的继承。

基本类型变量
<div ng-controller="OuterCtrl">
  <p>{{x}}</p>
  <div ng-controller="InnerCtrl">
    <input type="text" ng-model="x">
  </div>
</div>
<script>
function OuterCtrl($scope){
    $scope.x = 'hello';
}
function InnerCtrl($scope){
}
</script>
运行后会发现跟文章开头一样的问题，里面输入框变了，外面的没跟着变。

原因在于，InnerCtrl 中并未定义 x 这个变量，取值的时候，会沿着原型链向上找，找到了 OuterCtrl 中定义的 x ，然后赋值给自己，在 InnerCtrl
的输入框输入值时，改变的是 InnerCtrl 中的 x ，而对 OuterCtrl 中的 x 无影响。此时，两个 x 是独立的。

不过，如果你不嫌麻烦的话，用 $scope.$parent 可以绑定并影响上一层作用域中的基本变量：

<input type="text" ng-model="$parent.x">


引用类型的解决办法
<div ng-controller="OuterCtrl">
  <p>{{x}}</p>
  <div ng-controller="InnerCtrl">
    <input type="text" ng-model="x">
  </div>
</div>
<script>
function OuterCtrl($scope){
    $scope.data = {};
    $scope.data.x = 'hello';
}
function InnerCtrl($scope){
}
</script>

这种方法可以解决作用域的问题
