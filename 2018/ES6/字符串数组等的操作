
查找函数
includes()：返回布尔值，表示是否找到了参数字符串。
startsWith()：返回布尔值，表示参数字符串是否在源字符串的头部。
endsWith()：返回布尔值，表示参数字符串是否在源字符串的尾部。

var str = "my name is ligang";
str.indexOf("ligang");  // 11
str.includes("ligang"); // true
str.startsWith("my");   // true
str.endsWith("ligang"); // true


repeat()
repeat方法返回一个新字符串，表示将原字符串重复n次。

"x".repeat(3);  // xxx



padStart()、padEnd()
符串补全长度的功能。如果某个字符串不够指定长度，会在头部或尾部补全。padStart用于头部补全，padEnd用于尾部补全。

"1".padStart(3, "0");   // 001
"123".padStart(3, "0"); // 001

Number.isFinite()	检查一个数值是否为有限的
Number.isNaN()	检查一个值是否为NaN
Number.parseInt()	转为整数
Number.parseFloat()	转为浮点数
Number.isInteger()	判断一个值是否为整数


eg：
/* isFinite() */
Number.isFinite(15); // true
Number.isFinite(Infinity);  // false
Number.isFinite("5"); // false
isFinite("5");  // true

/* isNaN() */
Number.isNaN(NaN);  // true
Number.isNaN(5);  // false
Number.isNaN("NaN");  // false
isNaN("NaN");  // true

/* parseFloat() */
Number.parseInt("12.01a"); // 12
parseInt("12.01a"); // 12

/* parseFloat() */
Number.parseFloat("12.01a"); // 12.01
parseFloat("12.01a"); // 12.01

/* isInteger() */
Number.isInteger(121);  // true
Number.isInteger(121.0);  // true
Number.isInteger(121.01);  // false
Number.isInteger("121");  // false


Math扩展
（1）Math.trunc()：去除一个数的小数部分，返回整数部分； 
（2）Math.sign()：判断一个数到底是正数、负数、还是零。
