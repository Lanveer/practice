
首先，请牢记2点：

JS是单线程语言

JS的Event Loop是JS的执行机制。深入了解JS的执行，就等于深入了解JS里的event loop


1. js为什么是单线程的？
解析： 如果js是多线程的话，一个线程要删除一个dom元素，另一个线程同步要处理这个dom元素，这个时候就会产生矛盾，这样的话就会报错。而单线程的话，处理事件
会一个接着一个的来，而不会同时处理，从而避免了报错。

2. js为什么需要异步？
js一般用在渲染页面上，如果是同步的话，就需要从上而下一次执行，如果遇到卡顿的话，就会阻塞后面的运行，但是如果是异步的话，就会优先执行后面的程序，等待
前面响应了或者执行了的话再接上刚开始的地方，这样的话就不会造成卡顿。


3. js的单线程实现异步操作
主要是通过 事件循环来实现异步操作的，通过判断处理事件的类型，给出不同的处理方式。

按照这种分类方式:JS的执行机制是：

首先判断JS是同步还是异步，同步就进入主进程，异步就进入event table

异步任务在event table中注册函数，当满足触发条件后，被推入event queue

同步任务进入主线程后一直执行，直到主线程空闲时，才会去event queue中查看是否有可执行的异步任务，如果有就推入主进程中

以上三步循环执行，这就是event loop。
